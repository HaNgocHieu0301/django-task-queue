# Generated by Django 4.2.7 on 2025-05-28 14:19

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('task_name', models.CharField(help_text='Tên của task function', max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('success', 'Success'), ('failed', 'Failed'), ('retry', 'Retry'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('args', models.JSONField(default=list, help_text='Arguments cho task')),
                ('kwargs', models.JSONField(default=dict, help_text='Keyword arguments cho task')),
                ('result', models.JSONField(blank=True, help_text='Kết quả của task', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Thông báo lỗi nếu task thất bại', null=True)),
                ('retry_count', models.PositiveIntegerField(default=0, help_text='Số lần đã retry')),
                ('max_retries', models.PositiveIntegerField(default=3, help_text='Số lần retry tối đa')),
                ('retry_delay', models.PositiveIntegerField(default=60, help_text='Thời gian delay giữa các lần retry (seconds)')),
                ('next_retry_at', models.DateTimeField(blank=True, help_text='Thời gian retry tiếp theo', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, help_text='Thời gian bắt đầu xử lý', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Thời gian hoàn thành', null=True)),
                ('worker_id', models.CharField(blank=True, help_text='ID của worker xử lý task', max_length=255, null=True)),
                ('queue_name', models.CharField(default='default', help_text='Tên queue chứa task', max_length=100)),
            ],
            options={
                'db_table': 'tasks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error')], max_length=10)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='tasks.task')),
            ],
            options={
                'db_table': 'task_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['status'], name='tasks_status_031d4c_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['priority'], name='tasks_priorit_a9efa1_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['queue_name'], name='tasks_queue_n_8f39ac_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['created_at'], name='tasks_created_db4e37_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['next_retry_at'], name='tasks_next_re_3c07d3_idx'),
        ),
    ]
