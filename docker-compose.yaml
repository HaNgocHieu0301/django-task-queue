services:
  # Django
  django:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./api:/code
    depends_on:
      - redis
      - postgres
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DJANGO_SETTINGS_MODULE=django_task_queue.settings
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=django_db
      - POSTGRES_USER=django_user
      - POSTGRES_PASSWORD=django_password
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    networks:
      - default

  # Worker for default queue
  worker-default:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: python manage.py run_worker --queue=default --workers=3 --log-level=INFO
    volumes:
      - ./api:/code
    depends_on:
      - redis
      - postgres
      - django
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DJANGO_SETTINGS_MODULE=django_task_queue.settings
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=django_db
      - POSTGRES_USER=django_user
      - POSTGRES_PASSWORD=django_password
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - default

  # Redis
  redis:
    image: redis:latest
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - default

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=django_db
      - POSTGRES_USER=django_user
      - POSTGRES_PASSWORD=django_password
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge